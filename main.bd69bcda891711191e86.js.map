{"version":3,"sources":["./src/app/repo/repo.component.css","./src/app/repo/repo.component.html","./src/app/app.component.css","./src/app/repo/repo.component.ts","./src/environments/environment.prod.ts","./src/app/navbar/navbar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/not-found/not-found.component.css","./src/app/git/git.component.html","./src/app/app.module.ts","./src/app/git/git.component.css","./src/app/navbar/navbar.component.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/app/git/git.component.ts","./src/app/navbar/navbar.component.css","./src/app/git/git.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.bd69bcda891711191e86.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXBvLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"card card2 card-default mt-5\\\">\\n    <div class=\\\"card card2 card-heading pt-2\\\">\\n      <h3 class=\\\" card2 card-title ml-5 \\\">Repositories</h3>\\n    </div>\\n    <div class=\\\"card2 card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div *ngFor=\\\"let repo of repos\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-9\\\">\\n                <h4><a href=\\\"{{repo.html_url}}\\\" target=\\\"_blank\\\">{{repo.name}}</a></h4>\\n                <p>{{repo.description}}</p>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <span class=\\\"badge badge-default\\\">{{repo.watchers}} Watchers</span>\\n                <span class=\\\"badge badge-primary\\\">{{repo.forks}} Forks</span>\\n              </div>\\n            </div>\\n            <hr />\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { GitService } from '../git/git.service';\n\n@Component({\n  selector: 'app-repo',\n  templateUrl: './repo.component.html',\n  styleUrls: ['./repo.component.css']\n})\nexport class RepoComponent implements OnInit {\n\n  users: any = [];\n  repos: any = [];\n  username: string;\n\n  \n\n  constructor(private gitService: GitService) { }\n\n  ngOnInit() {\n    this.gitService.gitProfile()\n      .subscribe(res => {\n        //console.log(res)\n        this.users = res;\n      })\n\n    this.gitService.gitRepos()\n      .subscribe(data => {\n        //console.log(data)\n        this.repos = data;\n      })\n  }\n\n  searchUser() {\n    this.gitService.updateUser(this.username);\n\n    this.gitService.gitProfile()\n      .subscribe(res => {\n        //console.log(res)\n        this.users = res;\n      })\n\n    this.gitService.gitRepos()\n      .subscribe(data => {\n        //console.log(data)\n        this.repos = data;\n      })\n  }\n\n}","export const environment = {\n  production: false,\n  apiKey:\"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\",\n\n  \n};","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"git\\\" routerLinkActive=\\\"active\\\">Git-Users<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/repo\\\" routeLinkActive=\\\"/active\\\">Repositories</a>\\n        </li>\\n  \\n  \\n      </ul>\\n    </div>\\n  </nav>\\n\";","import { Component } from '@angular/core';\n// import { GitService } from './git/git.service'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Git-Search';\n\n  // constructor(private gitService: GitService) {}\n\n}","export default \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<body>\\n    <div class=\\\"container mt-4\\\">\\n      <form>\\n        <div class=\\\"form-group\\\">\\n    \\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"gitSearch\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"User-name\\\" [(ngModel)]=\\\"username\\\"(keyup)=\\\"searchUser()\\\" >\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">Enter your search here.</small>\\n        </div>\\n      </form>\\n    </div>\\n    <!--Users-->\\n    <div class=\\\"container mt-5\\\" *ngIf=\\\"users\\\">\\n      <div class=\\\"card card-default  p-4\\\">\\n        <div class=\\\"card-heading\\\">\\n          <h3 class=\\\"card-title mr-3\\\">{{users.name}}</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <p><strong>Profile Picture</strong></p>\\n              <img class=\\\"\\\" src=\\\"{{users.avatar_url}}\\\">\\n            </div>\\n            <div class=\\\"col-md-8\\\">\\n              <div class=\\\"stats\\\">\\n                <span class=\\\"badge badge-secondary\\\">{{users.public_repos}} Public Repos</span>\\n                <span class=\\\"badge badge-primary\\\">{{users.public_gists}} Public Gists</span>\\n                <span class=\\\"badge badge-success\\\">{{users.followers}} Followers</span>\\n                <span class=\\\"badge badge-info\\\">{{users.following}} Following</span>\\n              </div>\\n              <br>\\n              <ul class=\\\"list-group\\\">\\n                <li class=\\\"list-group-item\\\"><strong>usersname: </strong>{{users.login}}</li>\\n                <li class=\\\"list-group-item\\\"><strong>Location: </strong>{{users.location}}</li>\\n                <li class=\\\"list-group-item\\\"><strong>Email: </strong>{{users.email}}</li>\\n                <li class=\\\"list-group-item\\\"><strong>Blog: </strong>{{users.blog}}</li>\\n                <li class=\\\"list-group-item\\\"><strong>Member Since: </strong>{{users.created_at|date}}</li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n  </body>\\n    \\n\\n\\n\\n\\n\\n\\n\\n  \";","import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgProgressModule } from '@ngx-progressbar/core';\nimport{NgProgressHttpClientModule} from '@ngx-progressbar/http-client';\n\nimport { AppComponent } from './app.component';\nimport { GitComponent } from './git/git.component';\nimport { GitService } from './git/git.service';\nimport { RepoComponent } from './repo/repo.component';\nimport { AppRoutingModule} from './app-routing.module';\nimport { NavBarComponent } from './navbar/navbar.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { Routes } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path:\"git\",component:GitComponent},\n  {path:\"repo\",component:RepoComponent},\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GitComponent,\n    RepoComponent,\n    NavBarComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    NgProgressModule.forRoot(),\n    NgProgressHttpClientModule\n  ],\n  providers: [GitService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"/* body{\\n    background-image: url(../../assets/wp3082255.jpg);\\n} */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHIiwiZmlsZSI6ImdpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogYm9keXtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vYXNzZXRzL3dwMzA4MjI1NS5qcGcpO1xufSAqLyJdfQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"<p>not-found works!</p>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {RepoComponent} from '../app/repo/repo.component';\nimport {GitComponent} from '../app/git/git.component';\nimport {NotFoundComponent} from '../app/not-found/not-found.component';\n\n\nconst routes: Routes = [\n  {path:'repo', component:RepoComponent},\n  {path:'git',component:GitComponent},\n  {path:'',component:GitComponent},\n  {path:'**',component:NotFoundComponent},\n  {path:'',redirectTo:'/git',pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { GitService } from '../git/git.service';\n\n@Component({\n  selector: 'app-git',\n  templateUrl: './git.component.html',\n  styleUrls: ['./git.component.css']\n})\nexport class GitComponent implements OnInit {\n  users: any=[];\n  repos: any=[];\n  username!: string;\n\n  constructor(private gitService: GitService) { }\n\n  ngOnInit() {\n    this.gitService.gitProfile()\n      .subscribe(res => {\n        //console.log(res)\n        this.users = res;\n      })\n\n    this.gitService.gitRepos()\n      .subscribe(data => {\n        //console.log(data)\n        this.repos = data;\n      })\n  }\n\n  searchUser() {\n    this.gitService.updateUser(this.username);\n\n    this.gitService.gitProfile()\n      .subscribe(res => {\n        //console.log(res)\n        this.users = res;\n      })\n\n    this.gitService.gitRepos()\n      .subscribe(data => {\n        //console.log(data)\n        this.repos = data;\n      })\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from \"@angular/core\";\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn:'root',\n})\nexport class GitService {\n    private username: string;\n    private apiUrl: string = \"https://api.github.com/users/\";\n    \n\n\n  gitProfile(){\n    return this.http.get(this.apiUrl + this.username )\n  }\n\n  //Git Repos\n  gitRepos() {\n    return this.http.get(this.apiUrl + this.username + \"/repos\" + \"?access_token=\")\n  }\n  constructor(private http: HttpClient) {\n    console.log(\"GitService Ready\");\n    this.username = \"sharon002\"\n  }\n  updateUser(username: string) {\n    this.username = username;\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}